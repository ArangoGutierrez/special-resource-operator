apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nvidia-feature-discovery
  labels:
    app.kubernetes.io/name: nvidia-feature-discovery
    app.kubernetes.io/version: 1.0.0-alpha
    app.kubernetes.io/part-of: nvidia-gpu
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nvidia-feature-discovery
      app.kubernetes.io/part-of: nvidia-gpu
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nvidia-feature-discovery
        app.kubernetes.io/version: 1.0.0-alpha
        app.kubernetes.io/part-of: nvidia-gpu
    spec:
      tolerations:
        - operator: Exists
        - key: nvidia.com/gpu
          operator: Exists
      effect: NoSchedule
      serviceAccount: nvidia-feature-discovery
      serviceAccountName: nvidia-feature-discovery
      containers:
        - image: quay.io/openshift-psap/nvidia-feature-discovery  # nvidia/gpu-feature-discovery:1.0.0-alpha
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: all
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: "compute,utility"
            - name: NVIDIA_REQUIRE_CUDA  
              value: "cuda>=5.0"
          name: nvidia-feature-discovery
          securityContext:
            privileged: true
          volumeMounts:
            - name: output-dir
              mountPath: "/etc/kubernetes/node-feature-discovery/features.d"
            - name: dmi-product-name
              mountPath: "/sys/class/dmi/id/product_name"
      volumes:
        - name: output-dir
          hostPath:
            path: "/etc/kubernetes/node-feature-discovery/features.d"
        - name: dmi-product-name
          hostPath:
            path: "/sys/class/dmi/id/product_name"
      nodeSelector:
        node-role.kubernetes.io/worker: ""
        feature.node.kubernetes.io/pci-10de.present: "true" # NVIDIA GPU
